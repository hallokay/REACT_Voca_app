{"version":3,"sources":["components/Header.js","hooks/useFetch.js","components/DayList.js","components/Word.js","components/Day.js","components/EmptyPage.js","components/CreateWord.js","components/CreateDay.js","App.js","index.js"],"names":["Header","className","to","useFetch","url","useState","data","setData","useEffect","fetch","then","res","json","DayList","days","length","map","day","id","Word","w","word","setWord","isShow","setIsShow","isDone","setIsDone","type","checked","onChange","method","headers","body","JSON","stringify","ok","eng","kor","onClick","window","confirm","Day","useParams","words","EmptyPage","CreateWord","history","useHistory","isLoading","setLoading","engRef","useRef","korRef","dayRef","onSubmit","e","preventDefault","current","value","alert","push","htmlFor","placeholder","ref","style","opacity","CreateDay","App","basename","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30ddb558.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n      <div className=\"header\">\r\n        <h1>\r\n          \r\n          <Link to=\"/\">토익 영단어(고급)</Link>\r\n        </h1>\r\n        <div className=\"menu\">\r\n          \r\n          <Link to=\"/create_word\" className=\"link\">\r\n            단어추가\r\n          </Link>\r\n          <Link to=\"/create_day\" className=\"link\">\r\n            Day 추가\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Header\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setData(data);\r\n      });\r\n  }, [url]);\r\n\r\n  return data;\r\n};\r\n\r\nexport default useFetch;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useFetch from \"../hooks/useFetch\";\r\n\r\nconst DayList = () => {\r\n  const days = useFetch(`http://localhost:5000/days`);\r\n\r\n  // 느릴때 로딩 만들기\r\n  if(days.length === 0) {\r\n    return <span>Loading...</span>\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <ul className=\"list_day\">\r\n      {days.map((day) => (\r\n        <li key={day.id}>\r\n          <Link to={`day/${day.day}`}>Day {day.day}</Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DayList;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Word = ({ word: w }) => {\r\n  const [word, setWord] = useState(w);\r\n  const [isShow, setIsShow] = useState(false);\r\n  const [isDone, setIsDone] = useState(word.isDone);\r\n\r\n  function toggleShow() {\r\n    setIsShow(!isShow);\r\n  }\r\n\r\n  function toggleDone() {\r\n    // setIsDone(!isDone);\r\n    fetch(`http://localhost:5000/words/${word.id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        ...word,\r\n        isDone: !isDone,\r\n      }),\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        setIsDone(!isDone);\r\n      }\r\n    });\r\n  }\r\n\r\n  function del() {\r\n    if (window.confirm(\"삭제하시겠습니까?\")) {\r\n      fetch(`http://localhost:5000/words/${word.id}`, {\r\n        method: \"DELETE\",\r\n      }).then((res) => {\r\n        if (res.ok) {\r\n          setWord({\r\n            ...word,\r\n            id: 0,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  if (word.id === 0) {\r\n    return null;\r\n  }\r\n  return (\r\n    <>\r\n      <tr className={isDone ? \"off\" : \"\"}>\r\n        <td>\r\n          <input type=\"checkbox\" checked={isDone} onChange={toggleDone} />\r\n        </td>\r\n        <td>{word.eng}</td>\r\n        <td>{isShow && word.kor}</td>\r\n        <td>\r\n          <button onClick={toggleShow}>뜻 {isShow ? \"숨기기\" : \"보기\"} </button>\r\n          <button onClick={del} className=\"btn_del\">\r\n            삭제\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Word;\r\n","// 특정 날짜를 클릭했을 때 단어들이 나오는 페이지\r\n\r\nimport React from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport Word from \"./Word\";\r\nimport useFetch from \"../hooks/useFetch\";\r\n\r\nconst Day = () => {\r\n  const {day} = useParams();\r\nconst words = useFetch(`http://localhost:5000/words?day=${day}`)\r\n\r\n  return (\r\n    <>\r\n    <h2>Day {day}</h2>\r\n    {words.length === 0 && <span>Loding...</span>}\r\n      <table>\r\n        <tbody>\r\n          {words.map((word) => (\r\n           <Word key={word.id} word={word}/>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Day;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst EmptyPage = () => {\r\n    return (\r\n      <>\r\n      <h2>잘못된 접근입니다.</h2>\r\n      <Link to=\"/\">돌아가기</Link>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default EmptyPage\r\n","import React, { useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport useFetch from \"../hooks/useFetch\";\r\n\r\nconst CreateWord = () => {\r\n  const days = useFetch(`http://localhost:5000/days`);\r\n  const history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // 로딩중에 생성 더 안되게 막기\r\n    // isLoding 로딩상태가 아닐때 새로운 단어 생성 가능\r\n    if (!isLoading) {\r\n      setLoading(true);\r\n      // 통신 중일땐 isLoding이 true가됨\r\n      fetch(`http://localhost:5000/words/`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          day: dayRef.current.value,\r\n          eng: engRef.current.value,\r\n          kor: korRef.current.value,\r\n          isDone: false,\r\n        }),\r\n      }).then((res) => {\r\n        if (res.ok) {\r\n          alert(\"생성이 완료되었습니다.\");\r\n          history.push(`/day/${dayRef.current.value}`);\r\n          setLoading(false);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  const engRef = useRef(null);\r\n  const korRef = useRef(null);\r\n  const dayRef = useRef(null);\r\n  // ref를 써주면 돔 요소가 생성된 후 접근 가능\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <div className=\"input_area\">\r\n        <label htmlFor=\"\">Eng</label>\r\n        <input type=\"text\" placeholder=\"영단어\" ref={engRef} />\r\n      </div>\r\n      <div className=\"input_area\">\r\n        <label htmlFor=\"\">Kor</label>\r\n        <input type=\"text\" placeholder=\"뜻\" ref={korRef} />\r\n      </div>\r\n      <div className=\"input_area\">\r\n        <label htmlFor=\"\">Day</label>\r\n        <select ref={dayRef}>\r\n          {days.map((day) => (\r\n            <option key={day.id} value={day.day}>\r\n              {day.day}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <button\r\n        style={{\r\n          opacity: isLoading ? 0.3 : 1,\r\n        }}\r\n      >\r\n        {isLoading ? \"Saving...\" : \"저장\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreateWord;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport useFetch from \"../hooks/useFetch\";\r\n\r\nconst CreateDay = () => {\r\n  const days = useFetch(`http://localhost:5000/days`);\r\n  const history = useHistory();\r\n\r\n  function addDay() {\r\n    fetch(`http://localhost:3002/days/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        day: days.length + 1,\r\n      }),\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        alert(\"생성이 완료 되었습니다.\");\r\n        history.push(\"/\");\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>현재 일수: {days.length}일</h3>\r\n      <button onClick={addDay}>Day 추가</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateDay;\r\n","import Header from \"./components/Header\";\nimport DayList from \"./components/DayList\";\nimport Day from \"./components/Day\";\nimport EmptyPage from \"./components/EmptyPage\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport CreateWord from \"./components/CreateWord\";\nimport CreateDay from \"./components/CreateDay\";\n\nfunction App() {\n  return (\n    <BrowserRouter basename=\"/react_voca_app\">\n      <div className=\"App\">\n        <Header />\n\n        <Switch>\n          <Route exact path=\"/\">\n            <DayList />\n          </Route>\n          <Route exact path=\"/day/:day\">\n            <Day />\n          </Route>\n          <Route exact path=\"/create_word\">\n            <CreateWord />\n          </Route>\n          <Route exact path=\"/create_day\">\n            <CreateDay />\n          </Route>\n          <Route path=\"*\">\n            <EmptyPage />\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}